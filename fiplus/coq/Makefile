############################################################################
#
#  Primary targets:
#    all           - the default target; synonym for 'coq'
#    coq           - builds all .vo files
#    doc           - synonym for 'documentation'
#    documentation - builds all html documentation
#    clean         - removes generated files
#
#  Other targets:
#    rebuild       - regenerates files from Ott language specifications
#
############################################################################


## Paths to executables. Do not include options here.
## Modify these to suit your Coq installation, if necessary.

OTT = ott
LNGEN = lngen #$(stack exec lngen)
COQC = coqc
COQDEP = coqdep
COQDOC = coqdoc

## Name of the submakefile generated by coq_makefile

COQMKFILENAME=CoqSrc.mk


## Directories

DOCDIR = html  ##  where generated HTML documentation should go.

## List of files to be compiled and documented.

FILES = $(patsubst %.v,%,$(wildcard *.v))

## Lists calculated from the above.
VFILES   = $(foreach i, $(FILES), $(i).v)
VOFILES  = $(foreach i, $(FILES), $(i).vo)


############################################################################

.PHONY: all clean coq dist doc documentation rebuild
.SUFFIXES: .v .vo

all: coq

quick:  $(COQMKFILENAME) $(VFILES)
	@$(MAKE) -f CoqSrc.mk quick

coq: $(COQMKFILENAME) $(VFILES)
	@$(MAKE) -f CoqSrc.mk

doc:
	+make documentation

documentation: $(DOCDIR) $(VOFILES)
	$(COQDOC) -g --quiet --noindex --html -d $(DOCDIR) $(VFILES)
	cp -f ../custom.css $(DOCDIR)/coqdoc.css

clean:
	rm -f *.vo  *.vos *.vok *.glob *.cmi *.cmx *.o
	rm -rf $(DOCDIR) $(COQMKFILENAME) $(COQMKFILENAME).conf

realclean: clean
	rm -f $(OTT_SOURCE)_ott.v $(OTT_SOURSE)_inf.v

############################################################################

## ott definitions
OTT_LOC = ../spec

rebuild: syntax_ott.v rules_inf.v

syntax_ott.v: $(OTT_LOC)/rules.ott $(OTT_LOC)/reduction.ott
	$(OTT)  $(OTT_LOC)/rules.ott $(OTT_LOC)/reduction.ott -coq_lngen true -coq_expand_list_types true -o $@
	@if grep '<<no parses (' $@ >/dev/null 2>&1 && \
	[ -z "$(DONTSTOP)" ]; then \
		echo; \
	echo "***** OTT PARSE ERROR(S) *****"; \
		grep -n '<<no parses (' $@; \
		$(RM) $@; \
		exit 1; \
	fi >&2

rules_inf.v: $(OTT_LOC)/rules.ott
	$(LNGEN) --coq rules_inf.v --coq-ott syntax_ott $(OTT_LOC)/rules.ott


$(COQMKFILENAME): Makefile $(shell ls *.v | grep -v _ott.v | grep -v _inf.v)
	coq_makefile -arg '-w none' -f _CoqProject -o $(COQMKFILENAME)

############################################################################

.depend: $(VFILES)
	$(COQDEP) -f _CoqProject > .depend

include .depend
